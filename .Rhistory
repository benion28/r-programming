install.packages("aomisc")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
pacman::p_load(pacman, drc, nlme)
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
pacman::p_load(pacman, nlme)
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
pacman::p_load(pacman, drc)
library(drc)
remove.packages("drc", lib="~/R/win-library/4.1")
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
#install.packages("drc
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
#install.packages("drc")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("drc")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("drc")
library(drc)
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("carData")
library(drc)
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
pacman::p_load(pacman, drc)
detach("package:drc", unload = TRUE)
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
pacman::p_load(pacman, drc)
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("aomisc")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("pupaim")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("PUPAIM")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("minpack.lm")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("pwr")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("simr")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("lme4")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("lmerTest")
# Load Libraries
#pacman::p_load(pacman, drc, nlme, aomisc)
#pacman::p_load(pacman, drc)
install.packages("MuMIn")
?pwr
??pwr
# Load Libraries
pacman::p_load(pacman, drc, nlme)
# Import data set
dataset <-  read.csv("C:\\Benion\\Benion Programmings\\Python\\AI & ML\\data\\tree-diameter-height.csv", head=TRUE, sep=",")
source("~/.active-rstudio-document")
model <- drm(Height ~ Diameter, fct=NLS.expoDecay(), data = dataset)
model <- drm(Height ~ Diameter, fct=DRC.expoDecay(), data = dataset)
model <- drm(Height ~ Diameter, data = dataset)
model <- drm(Height ~ Diameter, fct, data = dataset)
model <- nls(Height ~ Diameter, fct, data = dataset)
model <- nls(Height ~ Diameter, data = dataset)
model <- nls(formular = Height ~ Diameter, data = dataset)
# Technvidan Michaelis-Menten kinetics
MM.model <- drm(Height ~ Diameter, fct=MM.2(), data = dataset)
# Load Libraries
pacman::p_load(pacman, drc, nlme, ggplot2)
# Import data set
dataset <-  read.csv("C:\\Benion\\Benion Programmings\\Python\\AI & ML\\data\\tree-diameter-height.csv", head=TRUE, sep=",")
head(dataset, n = 10)
# Technvidan Michaelis-Menten kinetics
MM.model <- drm(Height ~ Diameter, fct=MM.2(), data = dataset)
summary(MM.model)
predictions <- predict(MM.model, dataset)
mm_df = data.frame("Actual Diameter"=dataset$Diameter, "Actual Height"=dataset$Height, "Predicted Height"=predictions)
# Technvidan Michaelis-Menten kinetics
MM.model <- drm(Height ~ Diameter, data = dataset, fct=MM.2())
# EXploratory Data Analysis
ggplot() +
geom_point(aes(x = dataset$Diameter, y = dataset$Height), colour = "red") +
ggtitle("Tree Height-Diameter Relationship") +
xlab("Diameter") +
ylab("Height")
# Load Libraries
pacman::p_load(pacman, caTools, e1071, hydroGOF, ggplot2)
# Import data set
dataset <-  read.csv("C:\\Benion\\Benion Programmings\\Python\\AI & ML\\data\\tree-diameter-height.csv", head=TRUE, sep=",")
head(dataset, n = 10)
# EXploratory Data Analysis
ggplot() +
geom_point(aes(x = dataset$Diameter, y = dataset$Height), colour = "red") +
ggtitle("Tree Height-Diameter Relationship") +
xlab("Diameter") +
ylab("Height")
# Data Splicing
split <- sample.split(dataset, SplitRatio = 0.8)
training <- subset(dataset, split==TRUE)
testing <- subset(dataset, split==FALSE)
# Model Fitting
model <-  svm(formula = Height ~ Diameter, data = training, type = "eps-regression")
summary(model)
# Linear Regression
lmm <- lm(formula = Height ~ Diameter, data = training)
summary(lmm)
y_predict = predict(lmm, testing)
RMSE2=rmse(y_predict,testing$Height)
RSQUARE2 = 0.003898 * 100
# Making Predictions
predictions = predict(model, testing)
#Calculate RMSE
RMSE=rmse(predictions,testing$Height)
# Calculate RSCORE
RSQUARE = cor(testing$Height, predictions)
MAPE = mean(abs((testing$Height - predictions)/testing$Height)) * 100
Accuracy = 100 - MAPE
# Table of Real Height vs Predicted Height
data_frame <- data.frame("Real Height"=testing$Height, "Predicted Height"=predictions)
# EXploratory Data Analysis (Regression Line)
# Scattered Plot
ggplot() +
geom_point(aes(x = testing$Diameter, y = testing$Height), colour = "red") +
geom_line(aes(x = testing$Diameter, y = predictions), colour = "blue")+
ggtitle("Tree Height-Diameter Relationship (Regression Line)") +
xlab("Diameter") +
ylab("Height")
# Regression Line
ggplot() +
geom_line(aes(x = testing$Diameter, y = predictions), colour = "blue")+
ggtitle("Tree Height-Diameter Relationship (Regression Line)") +
xlab("Diameter") +
ylab("Height")
# Histogram (Real Height)
ggplot(data_frame, aes(x = testing$Height)) +
geom_histogram(bins = 30, colour = "red") +
labs(x = "", y = "Real Height")
# Histogram (Predicted Height)
ggplot(data_frame, aes(x = predictions)) +
geom_histogram(bins = 30, colour = "green") +
labs(x = "", y = "Predicted Height")
# Model Comparison Frame
prediction_frame <- data.frame("Real Values"=testing$Height,"SVR_Predict"=predictions, "LM_Predict"=y_predict)
head(dataset, n = 10)
View(dataset)
View(data_frame)
View(testing)
View(dataset)
# Load Libraries
pacman::p_load(pacman, caTools, e1071, hydroGOF, ggplot2)
# Import data set
dataset <-  read.csv("C:\\Benion\\Benion Programmings\\Python\\AI & ML\\data\\HDData.csv", head=TRUE, sep=",")
head(dataset, n = 10)
View(dataset)
# EXploratory Data Analysis
ggplot() +
geom_point(aes(x = dataset$D, y = dataset$H), colour = "red") +
ggtitle("Tree Height-Diameter Relationship") +
xlab("Diameter") +
ylab("Height")
# EXploratory Data Analysis
ggplot() +
geom_point(aes(x = dataset$D, y = dataset$H), colour = "red") +
ggtitle("Tree Height-vs Diameter") +
xlab("Diameter") +
ylab("Height")
# EXploratory Data Analysis
ggplot() +
geom_point(aes(x = dataset$D, y = dataset$H), colour = "red") +
ggtitle("Tree Height vs Diameter") +
xlab("Diameter") +
ylab("Height")
plot(dataset)
# Data Splicing
split <- sample.split(dataset, SplitRatio = 0.8)
training <- subset(dataset, split==TRUE)
testing <- subset(dataset, split==FALSE)
# Model Fitting
model <-  svm(formula =H ~ D, data = training, type = "eps-regression")
summary(model)
View(testing)
# Linear Regression
linear_model <- lm(formula = H ~ D, data = dataset)
summary(linear_model)
# Linear Regression
linear_model <- lm(formula = H ~ D, data = training)
summary(linear_model)
summary(dataset)
View(linear_model)
# Load Libraries
pacman::p_load(pacman, caTools, e1071, hydroGOF, ggplot2)
# Import data set
dataset <-  read.csv("C:\\Benion\\Benion Programmings\\Python\\AI & ML\\data\\HDData.csv", head=TRUE, sep=",")
head(dataset, n = 10)
summary(dataset)
# EXploratory Data Analysis
ggplot() +
geom_point(aes(x = dataset$D, y = dataset$H), colour = "red") +
ggtitle("Tree Height vs Diameter") +
xlab("Diameter") +
ylab("Height")
# Data Splicing
split <- sample.split(dataset, SplitRatio = 0.8)
training <- subset(dataset, split==TRUE)
testing <- subset(dataset, split==FALSE)
# Model Fitting
model <-  svm(formula =H ~ D, data = training, type = "eps-regression")
summary(model)
# Load Libraries
pacman::p_load(pacman, caTools, e1071, hydroGOF, ggplot2)
# Import data set
dataset <-  read.csv("C:\\Benion\\Benion Programmings\\Python\\AI & ML\\data\\HDData.csv", head=TRUE, sep=",")
head(dataset, n = 10)
summary(dataset)
# EXploratory Data Analysis
ggplot() +
geom_point(aes(x = dataset$D, y = dataset$H), colour = "red") +
ggtitle("Tree Height vs Diameter") +
xlab("Diameter") +
ylab("Height")
# Data Splicing
split <- sample.split(dataset, SplitRatio = 0.8)
training <- subset(dataset, split==TRUE)
testing <- subset(dataset, split==FALSE)
# Model Fitting
model <-  svm(formula =H ~ D, data = training, type = "eps-regression")
summary(model)
# Linear Regression
linear_model <- lm(formula = H ~ D, data = training)
summary(linear_model)
y_predict = predict(linear_model, testing)
linear_RMSE=rmse(y_predict,testing$H)
linear_summary = summary(linear_model)
View(linear_summary)
linear_model_r-squared = linear_summary[["r.squared"]] * 100 + "%"
linear_model_adj_r-squared = linear_summary[["adj.r.squared"]] * 100 + "%"
linear_model_r-squared = as.double(linear_summary[["r.squared"]]) * 100 + "%"
linear_model_r-squared = linear_summary[["r.squared"]]
linear_model_r_squared = linear_summary[["r.squared"]]
linear_model_adj_r_squared = linear_summary[["adj.r.squared"]])
linear_model_adj_r_squared = linear_summary[["adj.r.squared"]]
View(linear_summary)
linear_summary[["adj.r.squared"]]
0.08187534 * 100
# Making Predictions
predictions = predict(model, testing)
#Calculate RMSE
RMSE=rmse(predictions,testing$H)
# Calculate RSCORE
RSQUARED = cor(testing$Height, predictions)
# Calculate RSCORE
RSQUARED = cor(testing$H, predictions)
Accuracy = 100 - (mean(abs((testing$H - predictions)/testing$H)) * 100)
0.22 * 100
# Calculate RSCORE
RSQUARE = cor(testing$H, predictions)
# Calculate RSCORE
RSQUARED = cor(testing$H, predictions)
Accuracy = 100 - (mean(abs((testing$H - predictions)/testing$H)) * 100)
# Table of Real Height vs Predicted Height
data_frame <- data.frame("Real Height"=testing$H, "Predicted Height"=predictions)
View(data_frame)
# EXploratory Data Analysis (Regression Line)
# Scattered Plot
ggplot() +
geom_point(aes(x = testing$D, y = testing$H), colour = "red") +
geom_line(aes(x = testing$D, y = predictions), colour = "blue")+
ggtitle("Tree Height-Diameter Relationship (Regression Line)") +
xlab("Diameter") +
ylab("Height")
# Regression Line
ggplot() +
geom_line(aes(x = testing$D, y = predictions), colour = "blue")+
ggtitle("Tree Height-Diameter Relationship (Regression Line Only)") +
xlab("Diameter") +
ylab("Height")
# Histogram (Predicted Height)
ggplot(data_frame, aes(x = predictions)) +
geom_histogram(bins = 30, colour = "green") +
labs(x = "", y = "Predicted Height")
# Model Comparison Frame
prediction_frame <- data.frame("Real Values"=testing$H,"SVR_Predictions"=predictions, "LinearModel_Predictions"=y_predict)
View(prediction_frame)
View(prediction_frame)
View(prediction_frame)
summary(prediction_frame)
View(dataset)
table(dataset$PLOT.NO == "P1")
items = dataset$PLOT.NO == "P1"
items = data.frame(dataset$PLOT.NO == "P1")
View(items)
p_unload(all)
# Unload Packages
p_unload(all)
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
# Load Libraries
pacman::p_load(pacman, caTools, e1071, hydroGOF, ggplot2)
# Import data set
dataset <-  read.csv("C:\\Benion\\Benion Programmings\\Python\\AI & ML\\data\\HDData.csv", head=TRUE, sep=",")
head(dataset, n = 10)
summary(dataset)
describe(dataset)
# Load Libraries
pacman::p_load(pacman, caTools, e1071, hydroGOF, ggplot2, psych)
# Import data set
dataset <-  read.csv("C:\\Benion\\Benion Programmings\\Python\\AI & ML\\data\\HDData.csv", head=TRUE, sep=",")
head(dataset, n = 10)
summary(dataset)
describe(dataset)
# EXploratory Data Analysis
ggplot() +
geom_point(aes(x = dataset$D, y = dataset$H), colour = "red") +
ggtitle("Tree Height vs Diameter") +
xlab("Diameter") +
ylab("Height")
P1table = data.frame(dataset$PLOT.NO["PLOT.No" == "P1"])
View(P1table)
P1table = data.frame(dataset$PLOT.NO[dataset$PLOT.NO == "P1"])
View(P1table)
P1table = data.frame(dataset[dataset$PLOT.NO == "P1"])
p1_plot_no <- dataset$PLOT.NO[dataset$PLOT.NO == "P1"]
p1_species <- dataset$SPECIES[dataset$PLOT.NO == "P1"]
p1_diameter <- dataset$D[dataset$PLOT.NO == "P1"]
p1_height <- dataset$H[dataset$PLOT.NO == "P1"]
P1_table = data.frame("Plot No"=p1_plot_no, "Species"=p1_species, "Diameter"=p1_diameter, "Height"=p1_height)
View(P1_table)
View(dataset)
# Tectona grandis Species Table
tg_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Tectona grandis"]
tg_species <- dataset$SPECIES[dataset$SPECIES == "Tectona grandis"]
tg_diameter <- dataset$D[dataset$SPECIES == "Tectona grandis"]
tg_height <- dataset$H[dataset$SPECIES == "Tectona grandis"]
tg_table = data.frame("Plot No"=tg_plot_no, "Species"=tg_species, "Diameter"=tg_diameter, "Height"=tg_height)
View(tg_table)
# Kashier(Tiv) Species Table
k_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Kashier(Tiv)"]
k_species <- dataset$SPECIES[dataset$SPECIES == "Kashier(Tiv)"]
k_diameter <- dataset$D[dataset$SPECIES == "Kashier(Tiv)"]
k_height <- dataset$H[dataset$SPECIES == "Kashier(Tiv)"]
kashier_table = data.frame("Plot No"=k_plot_no, "Species"=k_species, "Diameter"=k_diameter, "Height"=k_height)
View(kashier_table)
View(kashier_table)
describe(dataset)
description <- describe(dataset)
View(description)
summary = summary(dataset)
summary <- summary(dataset)
# Daniella olivera Species Table
do_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Daniella olivera"]
do_species <- dataset$SPECIES[dataset$SPECIES == "Daniella olivera"]
do_diameter <- dataset$D[dataset$SPECIES == "Daniella olivera"]
do_height <- dataset$H[dataset$SPECIES == "Daniella olivera"]
d_olivera_table <- data.frame("Plot No"=do_plot_no, "Species"=do_species, "Diameter"=do_diameter, "Height"=do_height)
View(d_olivera_table)
# Gmelina arborea Species Table
ga_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Gmelina arborea"]
ga_species <- dataset$SPECIES[dataset$SPECIES == "Gmelina arborea"]
ga_diameter <- dataset$D[dataset$SPECIES == "Gmelina arborea"]
ga_height <- dataset$H[dataset$SPECIES == "Gmelina arborea"]
g_arborea_table <- data.frame("Plot No"=ga_plot_no, "Species"=ga_species, "Diameter"=ga_diameter, "Height"=ga_height)
View(g_arborea_table)
# Khaya senegalensis Species Table
ks_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Khaya senegalensis"]
ks_species <- dataset$SPECIES[dataset$SPECIES == "Khaya senegalensis"]
ks_diameter <- dataset$D[dataset$SPECIES == "Khaya senegalensis"]
ks_height <- dataset$H[dataset$SPECIES == "Khaya senegalensis"]
k_senegalensis_table <- data.frame("Plot No"=ks_plot_no, "Species"=ks_species, "Diameter"=ks_diameter, "Height"=ks_height)
View(k_senegalensis_table)
58+344+19+18
# Vitex doniana Species Table
vd_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Vitex doniana"]
vd_species <- dataset$SPECIES[dataset$SPECIES == "Vitex doniana"]
vd_diameter <- dataset$D[dataset$SPECIES == "Vitex doniana"]
vd_height <- dataset$H[dataset$SPECIES == "Vitex doniana"]
V_doniana_table <- data.frame("Plot No"=vd_plot_no, "Species"=vd_species, "Diameter"=vd_diameter, "Height"=vd_height)
439+10
View(V_doniana_table)
# Anthocleista djalonensis Species Table
ad_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Anthocleista djalonensis"]
ad_species <- dataset$SPECIES[dataset$SPECIES == "Anthocleista djalonensis"]
ad_diameter <- dataset$D[dataset$SPECIES == "Anthocleista djalonensis"]
ad_height <- dataset$H[dataset$SPECIES == "Anthocleista djalonensis"]
a_djalonensis_table <- data.frame("Plot No"=ad_plot_no, "Species"=ad_species, "Diameter"=ad_diameter, "Height"=ad_height)
449+17
# Magifera indica Species Table
mi_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Magifera indica"]
mi_species <- dataset$SPECIES[dataset$SPECIES == "Magifera indica"]
mi_diameter <- dataset$D[dataset$SPECIES == "Magifera indica"]
mi_height <- dataset$H[dataset$SPECIES == "Magifera indica"]
m_indica_table <- data.frame("Plot No"=mi_plot_no, "Species"=mi_species, "Diameter"=mi_diameter, "Height"=mi_height)
View(m_indica_table)
466+1
# Afzelia africana Species Table
aa_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Afzelia africana"]
aa_species <- dataset$SPECIES[dataset$SPECIES == "Afzelia africana"]
aa_diameter <- dataset$D[dataset$SPECIES == "Afzelia africana"]
aa_height <- dataset$H[dataset$SPECIES == "Afzelia africana"]
a_africana_table <- data.frame("Plot No"=aa_plot_no, "Species"=aa_species, "Diameter"=aa_diameter, "Height"=aa_height)
View(a_africana_table)
467+8
# Ptericarpus erinaceous Species Table
pe_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Ptericarpus erinaceous"]
pe_species <- dataset$SPECIES[dataset$SPECIES == "Ptericarpus erinaceous"]
pe_diameter <- dataset$D[dataset$SPECIES == "Ptericarpus erinaceous"]
pe_height <- dataset$H[dataset$SPECIES == "Ptericarpus erinaceous"]
p_erinaceous_table <- data.frame("Plot No"=pe_plot_no, "Species"=pe_species, "Diameter"=pe_diameter, "Height"=pe_height)
475+46+7
# Iannea schimperiana Species Table
is_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Iannea schimperiana"]
is_species <- dataset$SPECIES[dataset$SPECIES == "Iannea schimperiana"]
is_diameter <- dataset$D[dataset$SPECIES == "Iannea schimperiana"]
is_height <- dataset$H[dataset$SPECIES == "Iannea schimperiana"]
i_schimperiana_table <- data.frame("Plot No"=is_plot_no, "Species"=is_species, "Diameter"=is_diameter, "Height"=is_height)
528+9
View(i_schimperiana_table)
# Ficus sur Species Table
fs_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Ficus sur"]
fs_species <- dataset$SPECIES[dataset$SPECIES == "Ficus sur"]
fs_diameter <- dataset$D[dataset$SPECIES == "Ficus sur"]
fs_height <- dataset$H[dataset$SPECIES == "Ficus sur"]
f_sur_table <- data.frame("Plot No"=fs_plot_no, "Species"=fs_species, "Diameter"=fs_diameter, "Height"=fs_height)
537+1
8+17+58+1+344+9+19+18+1+7+46+10
# Gmalina arborea Species Table
ga2_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Gmalina arborea"]
ga2_species <- dataset$SPECIES[dataset$SPECIES == "Gmalina arborea"]
ga2_diameter <- dataset$D[dataset$SPECIES == "Gmalina arborea"]
ga2_height <- dataset$H[dataset$SPECIES == "Gmalina arborea"]
g_arborea_2_table <- data.frame("Plot No"=ga2_plot_no, "Species"=ga2_species, "Diameter"=ga2_diameter, "Height"=ga2_height)
538+5
# Gmelina arboreag Species Table
ga3_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Gmelina arboreag"]
ga3_species <- dataset$SPECIES[dataset$SPECIES == "Gmelina arboreag"]
ga3_diameter <- dataset$D[dataset$SPECIES == "Gmelina arboreag"]
ga3_height <- dataset$H[dataset$SPECIES == "Gmelina arboreag"]
g_arborea_3_table <- data.frame("Plot No"=ga3_plot_no, "Species"=ga3_species, "Diameter"=ga3_diameter, "Height"=ga3_height)
543+14
# Saccoscphalus latifolia Species Table
sl_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Saccoscphalus latifolia"]
sl_species <- dataset$SPECIES[dataset$SPECIES == "Saccoscphalus latifolia"]
sl_diameter <- dataset$D[dataset$SPECIES == "Saccoscphalus latifolia"]
sl_height <- dataset$H[dataset$SPECIES == "Saccoscphalus latifolia"]
s_latifolia_table <- data.frame("Plot No"=sl_plot_no, "Species"=sl_species, "Diameter"=sl_diameter, "Height"=sl_height)
557+2
# Parkia biglobosia Species Table
pb_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Parkia biglobosia"]
pb_species <- dataset$SPECIES[dataset$SPECIES == "Parkia biglobosia"]
pb_diameter <- dataset$D[dataset$SPECIES == "Parkia biglobosia"]
pb_height <- dataset$H[dataset$SPECIES == "Parkia biglobosia"]
p_biglobosia_table <- data.frame("Plot No"=pb_plot_no, "Species"=pb_species, "Diameter"=pb_diameter, "Height"=pb_height)
# Parkia biglobosa Species Table
pb2_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Parkia biglobosa"]
pb2_species <- dataset$SPECIES[dataset$SPECIES == "Parkia biglobosa"]
pb2_diameter <- dataset$D[dataset$SPECIES == "Parkia biglobosa"]
pb2_height <- dataset$H[dataset$SPECIES == "Parkia biglobosa"]
p_biglobosia_table <- data.frame("Plot No"=pb2_plot_no, "Species"=pb2_species, "Diameter"=pb2_diameter, "Height"=pb2_height)
# Parkia biglobosa Species Table
pb2_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Parkia biglobosa"]
pb2_species <- dataset$SPECIES[dataset$SPECIES == "Parkia biglobosa"]
pb2_diameter <- dataset$D[dataset$SPECIES == "Parkia biglobosa"]
pb2_height <- dataset$H[dataset$SPECIES == "Parkia biglobosa"]
p_biglobosa_table <- data.frame("Plot No"=pb2_plot_no, "Species"=pb2_species, "Diameter"=pb2_diameter, "Height"=pb2_height)
# Parkia biglobosia Species Table
pb_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Parkia biglobosia"]
pb_species <- dataset$SPECIES[dataset$SPECIES == "Parkia biglobosia"]
pb_diameter <- dataset$D[dataset$SPECIES == "Parkia biglobosia"]
pb_height <- dataset$H[dataset$SPECIES == "Parkia biglobosia"]
p_biglobosia_table <- data.frame("Plot No"=pb_plot_no, "Species"=pb_species, "Diameter"=pb_diameter, "Height"=pb_height)
559+2
# Ptericarpus erinaneceous Species Table
pe2_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Ptericarpus erinaneceous"]
pe2_species <- dataset$SPECIES[dataset$SPECIES == "Ptericarpus erinaneceous"]
pe2_diameter <- dataset$D[dataset$SPECIES == "Ptericarpus erinaneceous"]
pe2_height <- dataset$H[dataset$SPECIES == "Ptericarpus erinaneceous"]
p_erinaneceous_table <- data.frame("Plot No"=pe_plot_no, "Species"=pe_species, "Diameter"=pe_diameter, "Height"=pe_height)
p_erinaneceous_table <- data.frame("Plot No"=pe2_plot_no, "Species"=pe2_species, "Diameter"=pe2_diameter, "Height"=pe2_height)
561+2
# Gmelina aborea Species Table
ga4_plot_no <- dataset$PLOT.NO[dataset$SPECIES == "Gmelina aborea"]
ga4_species <- dataset$SPECIES[dataset$SPECIES == "Gmelina aborea"]
ga4_diameter <- dataset$D[dataset$SPECIES == "Gmelina aborea"]
ga4_height <- dataset$H[dataset$SPECIES == "Gmelina aborea"]
g_arborea_4_table <- data.frame("Plot No"=ga4_plot_no, "Species"=ga4_species, "Diameter"=ga4_diameter, "Height"=ga4_height)
559+2
561+27
