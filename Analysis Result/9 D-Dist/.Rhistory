"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# plot density comparison for each model
plot_1 <- ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
denscomp(dist_exponential, legendtext="Exponential",main = "",xlab = "Dbh (cm)")
denscomp(list(dist_weibull, dist_gamma, dist_lognormal, dist_normal, dist_cauchy, dist_exponential, dist_logistics),
legendtext=c("Weibull", "Gamma", "Lognormal", "Normal", "Cauchy",
"Exponential", "Logistics"), main = "",xlab = "Dbh (cm)")
# plot density comparison for each model
plot_1 <- ggplot() +
geom_histogram(mapping=aes(x=diameters),bins=10, col="black", fill="grey") +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# plot density comparison for each model
plot_1 <- ggplot() +
geom_histogram(mapping=aes(x=diameters)) +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# plot density comparison for each model
plot_1 <- ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
geom_histogram(mapping=aes(x=diameters),bins=10, col="black", fill="grey") +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
geom_histogram(mapping=aes(x=diameters),bins=10, col="black", fill="grey") +
geom_histogram(mapping=aes(x=diameters),bins=10, col="black", fill="grey") +
# plot density comparison for each model
plot_1 <- ggplot() +
geom_histogram(mapping=aes(x=diameters),bins=10, col="black", fill="grey") +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# plot density comparison for each model
plot_1 <- ggplot() +
geom_histogram(mapping=aes(x=diameters),bins=10, col="black", fill="grey") +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# plot density comparison for each model
plot_1 <- ggplot() +
geom_histogram(aes(x=diameters),bins=10, col="black", fill="grey") +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# plot density comparison for each model
plot_1 <- ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# plot density comparison for each model
plot_1 <- ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.90), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# plot density comparison for each model
plot_1 <- ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.50), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# plot density comparison for each model
plot_1 <- ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# ggplot density comparison for each model
plot_1 <- ggplot(dencomp_table_long, aes(x = x, y = density)) +
geom_line() +
facet_wrap(~ model, nrow = 2, scales = "free") +
theme_bw()
# arrange plots in a grid
grid.arrange(plot_1, ncol = 1)
# GGPlot Density Comparison of Model ---  (Weibull)
ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Model (Weibull)", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Weibull" = "#120c4c"))
# GGPlot Density Comparison of Model ---  (Weibull)
ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Model (Weibull)", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Weibull" = "#f29012"))
# GGPlot Density Comparison of Model ---  (Weibull)
ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$weibull, colour = "Weibull")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Model (Weibull)", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Weibull" = "#7b0f0f"))
# GGPlot Density Comparison of Model ---  (Gamma)
ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$gamma, colour = "Gamma")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Model (Gamma)", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Gamma" = "#7b0f0f"))
# GGPlot Density Comparison of Model ---  (Lognormal)
ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$lognormal, colour = "Lognormal")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Model (Lognormal)", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Lognormal" = "#7b0f0f"))
# GGPlot Density Comparison of Model ---  (Normal)
ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$normal, colour = "Normal")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Model (Normal)", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Normal" = "#7b0f0f"))
# GGPlot Density Comparison of Model ---  (Cauchy)
ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$cauchy, colour = "Cauchy")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Model (Cauchy)", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Cauchy" = "#7b0f0f"))
# GGPlot Density Comparison of Model ---  (Exponential)
ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Model (Exponential)", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Exponential" = "#7b0f0f"))
# GGPlot Density Comparison of Model ---  (Exponential)
ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$exponential, colour = "Exponential")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Model (Exponential)", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Exponential" = "#7b0f0f"))
# GGPlot Density Comparison of Model ---  (Logistics)
ggplot() +
geom_line(aes(x = diameters, y = dencomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Density Comparison of Model (Logistics)", color = "Legend") +
theme(legend.position = c(0.90, 0.30), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Logistics" = "#7b0f0f"))
# Plot Cummulative Distribution
cdfcomp(list(dist_weibull, dist_gamma, dist_lognormal, dist_normal, dist_cauchy, dist_exponential, dist_logistics),
legendtext=c("Weibull", "Gamma", "Lognormal", "Normal", "Cauchy",
"Exponential", "Logistics"), main = "", ylab = "Cumulative Distribution Function",
xlab = "Dbh (cm)")
#---------------------    GGPlot Cumulative Distribution Comparison  -------------------------------#
# GGPlot Density Comparison
cdfcomp_table <- data.frame(
"x" = diameters,
"weibull" = pweibull(diameters, shape = as.numeric(summary_parameter_estimates_table$Shape[1]), scale = as.numeric(summary_parameter_estimates_table$Scale[1])),
"gamma" = pgamma(diameters, shape = as.numeric(summary_parameter_estimates_table$Shape[2]), rate = as.numeric(summary_parameter_estimates_table$Rate[2])),
"lognormal" = plnorm(diameters, meanlog = as.numeric(summary_parameter_estimates_table$Location[3]), sdlog = as.numeric(summary_parameter_estimates_table$Scale[3])),
"normal" = pnorm(diameters, mean = as.numeric(summary_parameter_estimates_table$Location[4]), sd = as.numeric(summary_parameter_estimates_table$Scale[4])),
"cauchy" = pcauchy(diameters, location = as.numeric(summary_parameter_estimates_table$Location[5]), scale = as.numeric(summary_parameter_estimates_table$Scale[5])),
"exponential" = pexp(diameters, rate = as.numeric(summary_parameter_estimates_table$Rate[6]), log = FALSE),
"logistics" = plogis(diameters, location = as.numeric(summary_parameter_estimates_table$Location[7]), scale = as.numeric(summary_parameter_estimates_table$Scale[7]))
)
# plot CDF comparison for each model
plot_2 <- ggplot(cdfcomp_table_long, aes(x = x, y = probability)) +
geom_line() +
facet_wrap(~ model, nrow = 2, scales = "free") +
scale_y_continuous(labels = scales::percent_format()) +
theme_bw()
# arrange plots in a grid
grid.arrange(plot_2, ncol = 1)
# convert data to long format for plotting
cdfcomp_table_long <- cdfcomp_table %>% pivot_longer(-x, names_to = "model", values_to = "probability")
# plot CDF comparison for each model
plot_2 <- ggplot(cdfcomp_table_long, aes(x = x, y = probability)) +
geom_line() +
facet_wrap(~ model, nrow = 2, scales = "free") +
scale_y_continuous(labels = scales::percent_format()) +
theme_bw()
# arrange plots in a grid
grid.arrange(plot_2, ncol = 1)
# ggplot density comparison for combined model
ggplot() +
geom_line(aes(x = diameters, y = cdfcomp_table$weibull, colour = "Weibull")) +
geom_line(aes(x = diameters, y = cdfcomp_table$gamma, colour = "Gamma")) +
geom_line(aes(x = diameters, y = cdfcomp_table$lognormal, colour = "Lognormal")) +
geom_line(aes(x = diameters, y = cdfcomp_table$normal, colour = "Normal")) +
geom_line(aes(x = diameters, y = cdfcomp_table$cauchy, colour = "Cauchy")) +
geom_line(aes(x = diameters, y = cdfcomp_table$exponential, colour = "Exponential")) +
geom_line(aes(x = diameters, y = cdfcomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Probability", title = "Cumulative Distribution of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# GGPlot Cummulative Distribution of Model ---  (Gamma)
ggplot() +
geom_line(aes(x = diameters, y = cdfcomp_table$gamma, colour = "Gamma")) +
labs(x = "Diameter (cm)", y = "Density (m)", title = "Cummulative Distribution of Model (Gamma)", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Gamma" = "#7b0f0f"))
# GGPlot Cummulative Distribution of Model ---  (Gamma)
ggplot() +
geom_line(aes(x = diameters, y = cdfcomp_table$gamma, colour = "Gamma")) +
labs(x = "Diameter (cm)", y = "Probability", title = "Cummulative Distribution of Model (Gamma)", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Gamma" = "#7b0f0f"))
# GGPlot Cummulative Distribution of Model ---  (Lognormal)
ggplot() +
geom_line(aes(x = diameters, y = cdfcomp_table$lognormal, colour = "Lognormal")) +
labs(x = "Diameter (cm)", y = "Probability", title = "Cummulative Distribution of Model (Lognormal)", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Lognormal" = "#7b0f0f"))
# GGPlot Cummulative Distribution of Model ---  (Normal)
ggplot() +
geom_line(aes(x = diameters, y = cdfcomp_table$normal, colour = "Normal")) +
labs(x = "Diameter (cm)", y = "Probability", title = "Cummulative Distribution (Normal)", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Normal" = "#7b0f0f"))
# GGPlot Cummulative Distribution of Model ---  (Cauchy)
ggplot() +
geom_line(aes(x = diameters, y = cdfcomp_table$cauchy, colour = "Cauchy")) +
labs(x = "Diameter (cm)", y = "Probability", title = "Cummulative Distribution of Model (Cauchy)", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Cauchy" = "#7b0f0f"))
# GGPlot Cummulative Distribution of Model ---  (Exponential)
ggplot() +
geom_line(aes(x = diameters, y = cdfcomp_table$exponential, colour = "Exponential")) +
labs(x = "Diameter (cm)", y = "Probability", title = "Cummulative Distribution of Model (Exponential)", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Exponential" = "#7b0f0f"))
# GGPlot Cummulative Distribution of Model ---  (Logistics)
ggplot() +
geom_line(aes(x = diameters, y = cdfcomp_table$logistics, colour = "Logistics")) +
labs(x = "Diameter (cm)", y = "Probability", title = "Cummulative Distribution of Model (Logistics)", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c("Logistics" = "#7b0f0f"))
# Plot Quantiles
qqcomp(list(dist_weibull, dist_gamma, dist_lognormal, dist_normal, dist_cauchy, dist_exponential, dist_logistics),
legendtext=c("Weibull", "Gamma", "Lognormal", "Normal", "Cauchy",
"Exponential", "Logistics"), main = "")
# Plot Probabilities
ppcomp(list(dist_weibull, dist_gamma, dist_lognormal, dist_normal, dist_cauchy, dist_exponential, dist_logistics),
legendtext=c("Weibull", "Gamma", "Lognormal", "Normal", "Cauchy",
"Exponential", "Logistics"), main = "")
#---------------------    GGPlot Quantile Quantile  -------------------------------#
# GGPlot Quantile Quantile Plot
qqcomp_table <- data.frame(
"x" = diameters,
"weibull" = qweibull(seq(0.01, 0.99, length.out = 100), shape = as.numeric(summary_parameter_estimates_table$Shape[1]), scale = as.numeric(summary_parameter_estimates_table$Scale[1])),
"gamma" = qgamma(seq(0.01, 0.99, length.out = 100), shape = as.numeric(summary_parameter_estimates_table$Shape[2]), rate = as.numeric(summary_parameter_estimates_table$Rate[2])),
"lognormal" = qlnorm(seq(0.01, 0.99, length.out = 100), meanlog = as.numeric(summary_parameter_estimates_table$Location[3]), sdlog = as.numeric(summary_parameter_estimates_table$Scale[3])),
"normal" = qnorm(seq(0.01, 0.99, length.out = 100), mean = as.numeric(summary_parameter_estimates_table$Location[4]), sd = as.numeric(summary_parameter_estimates_table$Scale[4])),
"cauchy" = qcauchy(seq(0.01, 0.99, length.out = 100), location = as.numeric(summary_parameter_estimates_table$Location[5]), scale = as.numeric(summary_parameter_estimates_table$Scale[5])),
"exponential" = qexp(seq(0.01, 0.99, length.out = 100), rate = as.numeric(summary_parameter_estimates_table$Rate[6]), log = FALSE),
"logistics" = qlogis(seq(0.01, 0.99, length.out = 100), location = as.numeric(summary_parameter_estimates_table$Location[7]), scale = as.numeric(summary_parameter_estimates_table$Scale[7]))
)
# convert data to long format for plotting
qqcomp_table_long <- qqcomp_table %>% pivot_longer(-x, names_to = "model", values_to = "quantile")
# plot QQ comparison for each model
plot_3 <- ggplot(qqcomp_table_long, aes(sample = x)) +
stat_qq(aes(sample = quantile), distribution = qweibull, geom = "point") +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ model, nrow = 2, scales = "free") +
theme_bw()
# arrange plots in a grid
grid.arrange(plot_3, ncol = 1)
qqcomp_table_long
# plot QQ comparison for each model
plot_3 <- ggplot(qqcomp_table_long, aes(sample = x)) +
stat_qq(aes(sample = quantile), distribution = weibull, geom = "point") +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ model, nrow = 2, scales = "free") +
theme_bw()
# arrange plots in a grid
grid.arrange(plot_3, ncol = 1)
# plot QQ comparison for each model
plot_3 <- ggplot(qqcomp_table_long, aes(sample = x)) +
stat_qq(aes(sample = quantile), distribution = qweibull, geom = "point") +
geom_abline(slope = 1, intercept = 0) +
facet_wrap(~ model, nrow = 2, scales = "free") +
theme_bw()
# arrange plots in a grid
grid.arrange(plot_3, ncol = 1)
# ggplot quantile quantile for combined model
ggplot() +
stat_qq(aes(sample = qqcomp_table$weibull, colour = "Weibull"), distribution = qweibull, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$gamma, colour = "Gamma"), distribution = qgamma, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$lognormal, colour = "Lognormal"), distribution = qlnorm, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$normal, colour = "Normal"), distribution = qnorm, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$cauchy, colour = "Cauchy"), distribution = qcauchy, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$exponential, colour = "Exponential"), distribution = qexp, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$logistics, colour = "Logistics"), distribution = qlogis, geom = "Point") +
labs(x = "Diameter (cm)", y = "Probability", title = "Cumulative Distribution of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Point"="#9f0841",
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
# ggplot quantile quantile for combined model
ggplot() +
stat_qq(aes(sample = qqcomp_table$weibull, colour = "Weibull"), distribution = qweibull, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$gamma, colour = "Gamma"), distribution = qgamma, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$lognormal, colour = "Lognormal"), distribution = qlnorm, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$normal, colour = "Normal"), distribution = qnorm, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$cauchy, colour = "Cauchy"), distribution = qcauchy, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$exponential, colour = "Exponential"), distribution = qexp, geom = "Point") +
stat_qq(aes(sample = qqcomp_table$logistics, colour = "Logistics"), distribution = qlogis, geom = "Point") +
geom_abline(slope = 1, intercept = 0) +
labs(x = "Diameter (cm)", y = "Probability", title = "Cumulative Distribution of Models", color = "Legend") +
theme(legend.position = c(0.90, 0.02), legend.justification = c("right", "bottom")) +
scale_color_manual(values = c(
"Point"="#9f0841",
"Exponential"="#f29012",
"Gamma"="#0f0f10",
"Lognormal"="#eb7de3",
"Logistics"="#eb1919",
"Cauchy"="#f0d70c",
"Normal"="#2533d3",
"Weibull"="#69ef79"
))
