i_min
murders$state[i_min]
# state with the highest population
murders$state[which.max(murders$population)]
# how many people does it have
max(murders$population)
# compute the murder rate for every state
murder_rate <- (murders$total / murders$population) * 100000
murder_rate
# order the states by murder rate
murders$state[order(murder_rate, decreasing = TRUE)]
# sorting data frame
# order the data set base on the population of states (ERROR)
murders[order(population)] |> head()
murders[order(region, rate)]
# orders in accending order
murders %>% arrange(rate) %>% head()
# sorting data tables (ERROR)
library("dplyr")
# orders in accending order
murders %>% arrange(rate) %>% head()
# orders in decending order
murders %>% arrange(desc(rate)) %>% head()
# to see a larger proportion
murders %>% top_n(10, rate)
# sorted by murder rate
murders %>% arrange(desc(rate)) %>% top_n(10)
# Unload Packages
library(pacman)
p_unload(all)
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
# 3 -- indexing
# use of logical to index vectors
l_index <- murder_rate < 0.71
# 3 -- indexing
# use of logical to index vectors
library(dslabs)
data(murders)
murder_rate <- (murders$total / murders$population) * 100000
l_index <- murder_rate < 0.71
l_index <- murder_rate <= 0.71
l_index
murders$state[l_index]
# count the true(1) or false(0) entries
sum(l_index)
# two logical conditions
TRUE & TRUE
TRUE & FALSE
FALSE & FALSE
# two logical conditions with the vectors
west <- murders$region == "West"
safe <- murder_rate <= 1
ll_index <- safe & west
murders$state[ll_index]
# indexing functions
r <- c(FALSE, TRUE, FALSE, TRUE, TRUE, FALSE)
which(r)
w_index <- which(murders$state == "Massachusetts")
w_index
murder_rate[w_index]
# or we can just use normal indexing
w_index <- murders$state == "Massachusetts"
murder_rate[w_index]
# match -- returns the index needed to access them
m_index <- match(c("New York", "Florida", "Texas"), murders$state)
m_index
murders$state[m_index]
murder_rate[m_index]
# %in% -- to check if the element of the first is in the second
p <- c("a", "b", "c", "d", "e")
q <- c("a", "d", "f")
q %in% p
(c("Boston", "Dakota", "Washington") %in% murders$state)
# Basic data wrangling
library("dplyr")
# add murder rate to our table
murders <- mutate(murders, rate=total/population * 100000)
# only show the entries lower with murder rate than 0.71
filter(murders, rate <= 0.71)
# to select columns we want to work with
new_table <- select(murders, state, region, rate)
filter(new_table, rate <= 0.71)
# we can use pipe to select, filter and insert into table
murders %>% select(state, region, rate) %>% filter(rate <= 0.71)
# Basic plots
# scatter plots
population_in_millions <- murders$population/10^6
total_gun_murders <- murders$total
plot(population_in_millions, total_gun_murders)
# histogram
hist(murders$rate)
murders$state[which.max(murders$rate)]
# boxplot
boxplot(rate ~ region, data = murders)
# summarizing data
library("dplyr")
library("tidyverse")
# access resulting values in the table
# arrange data after sorting
# provide summary statistic into readable code
murders <- mutate(murders, rate=(total / population) * 10^5)
# minimum, median and maximum for states in the western region
ss <- murders %>% filter(region == "West") %>% summarise(
minimum = min(rate),
median = median(rate),
maximum = max(rate)
)
# compute murder rate for the whole country
us_murder_rate <- murders %>% summarize(rate = (sum(total) / sum(population)) * 10^5)
# summarizing data in data table
library(dslabs)
library(data.table)
data(heights)
heights <- setDT(heights)
heights
# summarize
sss <- heights %>% summarize(
average = mean(height),
standard_deviation = sd(height)
)
# alternative of the above
library(data.table)
sss_a <- heights[, .(average = mean(height), standard_deviation = sd(height))]
# computer multiple summary
median_min_max <- function(x) {
qs <- quantile(x, c(0.5, 0, 1))
data.frame(median = qs[1], minimum = qs[2], maximum = qs[3])
}
heights[, .(median_min_max(height))]
# compute summary for different groups
library(data.table)
heights[, .(average = mean(height), standard_deviation = sd(height)), by = sex]
# summarize with more than one value
quantile(x, c(0, 0.5, 1))
# summarize with more than one value
x <- 1:5
quantile(x, c(0, 0.5, 1))
ss <- murders %>% filter(region == "West") %>% summarise(
range = quantile(rate, c(0, 0.5, 1)),
)
# introduction to data.table
library(data.table)
murders[, c("state", "region")] |> head()
murders[, .(state, region)] |> head()    #(Error)
# add new column "rate"
murders[, rate := (total/population) * 100000]   #(Error)
head(murders)
# add new multiple columns
murders[, ":=" (rate = ((total/population) * 100000), rank = rank(population))]   #(Error)
# this not a copy of x, but another name for x
xd <- data.table(a = 1)
yd <- xd
# until x is changed before y becomes another copy and vice versa
# (":=" --- update by reference)
xd[, a := 2]
yd
yd[, a := 1]
xd
# the "copy" forces the copy of the variable
xd <- data.table(a = 1)
yd <- copy(xd)
xd[, a := 2]
yd
# subsetting with "data.table"
# in "dply" we filter like this:
filter(murders, rate <= 0.7)
# then in "data.table"
library(data.table)
murders[rate <= 0.7]  #(ERROR)
# we can combine multiple filter options
murders[rate <= 0.7, .(state, rate)]  #(ERROR)
# compare with the "dplr" approach
library(dplyr)
murders %>% filter(rate <= 0.7) %>% select(state, rate)
# creating data frames
grades <- data.frame(
names = c("John", "Juan", "Jean", "Yao"),
exam_1 = c(95, 80, 90, 85),
exam_2 = c(90, 85, 85, 90)
)
grades
# by default "data.frame" turns characters to "factors"
class(grades$names)
# to prevent this we add an additional option
grades <- data.frame(
names = c("John", "Juan", "Jean", "Yao"),
exam_1 = c(95, 80, 90, 85),
exam_2 = c(90, 85, 85, 90),
stringsAsFactors = FALSE
)
class(grades$names)
# pull access columns
class(us_murder_rate)
# we want access directly to the "rate" column using "pull"
library(dplyr)
us_murder_rate %>% pull(rate)
# we want to save the value directly
us_murder_rate_value <- murders %>%
summarize(rate = (sum(total) / sum(population)) * 10^5) %>%
pull(rate)
us_murder_rate_value
# value is now numeric
class(us_murder_rate_value)
# grouping then summarize
# medium murder rate in each region of the USA
library(dplyr)
murders %>% group_by(region)
# this is now a special data frame called "a grouped" data frame
murders %>% group_by(region) %>% summarize(median = median(rate))
# the dot placeholder
# use of the "." to immitate the "pull"
us_murder_rate_value_d <- murders %>%
summarize(rate = (sum(total) / sum(population)) * 10^5) %>%
.$rate
us_murder_rate_value_d
# value is now numeric
class(us_murder_rate_value_d)
# Unload Packages
library(pacman)
p_unload(all)
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
# Load Libraries
pacman::p_load(pacman, caTools, ggplot2, psych, tidyverse, Metrics, lmfor, dplyr, nlme)
# Load Libraries
pacman::p_load(pacman, caTools, ggplot2, psych, tidyverse, Metrics, lmfor, dplyr, nlme)
# Load Libraries
pacman::p_load(pacman, caTools, ggplot2, psych, tidyverse, Metrics, lmfor, dplyr, nlme)
# Load Libraries
pacman::p_load(pacman, caTools, ggplot2, psych, tidyverse, Metrics, lmfor, dplyr, nlme)
# Load Libraries
pacman::p_load(pacman, caTools, ggplot2, psych, tidyverse, Metrics, lmfor, dplyr, nlme)
??knitr::opts_chunk$set(echo = TRUE)
?knitr::opts_chunk$set(echo = TRUE)
install.packages(c("betareg", "DirichletReg"))
??prodan
# Set Working Directory
setwd("C://Benion//Benion Programmings//R//Personal//CD-D")
# Load Libraries
pacman::p_load(pacman, psych, tidyverse, dplyr)
# Set Working Directory
setwd("C://Benion//Benion Programmings//R//School Result")
# Import data set
dataset <-  read.csv("result-data.csv", head=TRUE, sep=",")
head(dataset, n = 10)
summary(dataset)
describe(dataset)
data_description <- describe(dataset)
View(data_description)
# Select Classes
sss1_further_maths <- filter(dataset, dataset$CLASS == "SSS.1")
View(sss1_further_maths)
# Select Classes
sss1_further_maths <- filter(dataset, dataset$CLASS == "SSS 1")
View(sss1_further_maths)
# Select Classes
sss1 <- filter(dataset, dataset$CLASS == "SSS 1")
sss2 <- filter(dataset, dataset$CLASS == "SSS 2")
sss3 <- filter(dataset, dataset$CLASS == "SSS 3")
# Select Subjects
sss1_further_maths <- filter(sss1, sss1$SUBJECT == "FURTHER MATHEMATICS")
View(sss1_further_maths)
sss1_geography <- filter(sss1, sss1$SUBJECT == "GEOGRAPHY")
sss2_geography <- filter(sss2, sss2$SUBJECT == "GEOGRAPHY")
sss2_further_maths <- filter(sss2, sss2$SUBJECT == "FURTHER MATHEMATICS")
sss3_further_maths <- filter(sss3, sss3$SUBJECT == "FURTHER MATHEMATICS")
# Select Subjects
sss1_further_maths <- filter(sss1, sss1$SUBJECT == "FURTHER MATHEMATICS")
sss2_further_maths <- filter(sss2, sss2$SUBJECT == "FURTHER MATHEMATICS")
sss3_further_maths <- filter(sss3, sss3$SUBJECT == "FURTHER MATHEMATICS")
sss1_geography <- filter(sss1, sss1$SUBJECT == "GEOGRAPHY")
sss2_geography <- filter(sss2, sss2$SUBJECT == "GEOGRAPHY")
sss3_geography <- filter(sss3, sss3$SUBJECT == "GEOGRAPHY")
# SSS 1 Classes
sss1_1_39 <- sss1 %>% filter(SCORE >= 1 & SCORE <= 39)
sss1_40_44 <- sss1 %>% filter(SCORE >= 40 & SCORE <= 44)
sss1_45_49 <- sss1 %>% filter(SCORE >= 45 & SCORE <= 49)
sss1_50_59 <- sss1 %>% filter(SCORE >= 50 & SCORE <= 59)
sss1_60_69 <- sss1 %>% filter(SCORE >= 60 & SCORE <= 69)
sss1_70_79 <- sss1 %>% filter(SCORE >= 70 & SCORE <= 79)
sss1_80 <- sss1 %>% filter(SCORE >= 80)
# SSS 3 Classes
sss3_1_39 <- sss3 %>% filter(SCORE >= 1 & SCORE <= 39)
sss3_40_44 <- sss3 %>% filter(SCORE >= 40 & SCORE <= 44)
sss3_45_49 <- sss3 %>% filter(SCORE >= 45 & SCORE <= 49)
sss3_50_59 <- sss3 %>% filter(SCORE >= 50 & SCORE <= 59)
sss3_60_69 <- sss3 %>% filter(SCORE >= 60 & SCORE <= 69)
sss3_70_79 <- sss3 %>% filter(SCORE >= 70 & SCORE <= 79)
sss3_80 <- sss3 %>% filter(SCORE >= 80)
c(
length(filter(sss1_1_39, sss1_1_39$SUBJECT == "FURTHER MATHEMATICS")),
length(filter(sss1_40_44, sss1_40_44$SUBJECT == "FURTHER MATHEMATICS")),
length(filter(sss1_45_49, sss1_45_49$SUBJECT == "FURTHER MATHEMATICS")),
length(filter(sss1_50_59, sss1_50_59$SUBJECT == "FURTHER MATHEMATICS")),
length(filter(sss1_60_69, sss1_60_69$SUBJECT == "FURTHER MATHEMATICS")),
length(filter(sss1_70_79, sss1_70_79$SUBJECT == "FURTHER MATHEMATICS")),
length(filter(sss1_80, sss1_80$SUBJECT == "FURTHER MATHEMATICS"))
)
View(sss3_40_44)
filter(sss1_1_39, sss1_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE
length(filter(sss1_1_39, sss1_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE)
c(
length(filter(sss1_1_39, sss1_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_40_44, sss1_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_45_49, sss1_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_50_59, sss1_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_60_69, sss1_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_70_79, sss1_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_80, sss1_80$SUBJECT == "FURTHER MATHEMATICS"))
)
View(sss1_80)
c(
length(filter(sss1_1_39, sss1_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_40_44, sss1_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_45_49, sss1_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_50_59, sss1_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_60_69, sss1_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_70_79, sss1_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_80, sss1_80$SUBJECT == "FURTHER MATHEMATICS")$SCORE)
)
c(
length(filter(sss1_1_39, sss1_1_39$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_40_44, sss1_40_44$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_45_49, sss1_45_49$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_50_59, sss1_50_59$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_60_69, sss1_60_69$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_70_79, sss1_70_79$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_80, sss1_80$SUBJECT == "GEOGRAPHY")$SCORE)
)
c(
length(filter(sss2_1_39, sss2_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_40_44, sss2_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_45_49, sss2_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_50_59, sss2_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_60_69, sss2_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_70_79, sss2_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_80, sss2_80$SUBJECT == "FURTHER MATHEMATICS")$SCORE)
)
# SSS 2 Classes
sss2_1_39 <- sss2 %>% filter(SCORE >= 1 & SCORE <= 39)
sss2_40_44 <- sss2 %>% filter(SCORE >= 40 & SCORE <= 44)
sss2_45_49 <- sss2 %>% filter(SCORE >= 45 & SCORE <= 49)
sss2_50_59 <- sss2 %>% filter(SCORE >= 50 & SCORE <= 59)
sss2_60_69 <- sss2 %>% filter(SCORE >= 60 & SCORE <= 69)
sss2_70_79 <- sss2 %>% filter(SCORE >= 70 & SCORE <= 79)
sss2_80 <- sss2 %>% filter(SCORE >= 80)
c(
length(filter(sss2_1_39, sss2_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_40_44, sss2_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_45_49, sss2_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_50_59, sss2_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_60_69, sss2_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_70_79, sss2_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_80, sss2_80$SUBJECT == "FURTHER MATHEMATICS")$SCORE)
)
c(
length(filter(sss2_1_39, sss2_1_39$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_40_44, sss2_40_44$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_45_49, sss2_45_49$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_50_59, sss2_50_59$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_60_69, sss2_60_69$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_70_79, sss2_70_79$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_80, sss2_80$SUBJECT == "GEOGRAPHY")$SCORE)
)
c(
length(filter(sss3_1_39, sss3_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_40_44, sss3_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_45_49, sss3_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_50_59, sss3_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_60_69, sss3_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_70_79, sss3_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_80, sss3_80$SUBJECT == "FURTHER MATHEMATICS")$SCORE)
)
score_subject_table <- data.frame(
"SSS 1 F/M" = c(
length(filter(sss1_1_39, sss1_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_40_44, sss1_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_45_49, sss1_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_50_59, sss1_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_60_69, sss1_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_70_79, sss1_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_80, sss1_80$SUBJECT == "FURTHER MATHEMATICS")$SCORE)
),
"SSS 1 GEO" = c(
length(filter(sss1_1_39, sss1_1_39$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_40_44, sss1_40_44$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_45_49, sss1_45_49$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_50_59, sss1_50_59$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_60_69, sss1_60_69$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_70_79, sss1_70_79$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_80, sss1_80$SUBJECT == "GEOGRAPHY")$SCORE)
),
"SSS 2 F/M" = c(
length(filter(sss2_1_39, sss2_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_40_44, sss2_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_45_49, sss2_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_50_59, sss2_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_60_69, sss2_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_70_79, sss2_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_80, sss2_80$SUBJECT == "FURTHER MATHEMATICS")$SCORE)
),
"SSS 2 GEO" = c(
length(filter(sss2_1_39, sss2_1_39$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_40_44, sss2_40_44$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_45_49, sss2_45_49$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_50_59, sss2_50_59$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_60_69, sss2_60_69$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_70_79, sss2_70_79$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_80, sss2_80$SUBJECT == "GEOGRAPHY")$SCORE)
),
"SSS 3 F/M" = c(
length(filter(sss3_1_39, sss3_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_40_44, sss3_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_45_49, sss3_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_50_59, sss3_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_60_69, sss3_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_70_79, sss3_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_80, sss3_80$SUBJECT == "FURTHER MATHEMATICS")$SCORE)
),
"SSS 3 GEO" = c(
length(filter(sss3_1_39, sss3_1_39$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_40_44, sss3_40_44$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_45_49, sss3_45_49$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_50_59, sss3_50_59$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_60_69, sss3_60_69$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_70_79, sss3_70_79$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_80, sss3_80$SUBJECT == "GEOGRAPHY")$SCORE)
)
)
rownames(score_subject_table) <- c(
"1 - 39", "40 - 44", "45 - 49", "50 - 59", "60 - 69", "70 - 79", "80>"
)
score_subject_table
length(filter(sss3$SUBJECT  == "GEOGRAPHY"))
length(sss3_geography$SCORE)
score_subject_table <- data.frame(
"SSS 1 F/M" = c(
length(filter(sss1_1_39, sss1_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_40_44, sss1_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_45_49, sss1_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_50_59, sss1_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_60_69, sss1_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_70_79, sss1_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss1_80, sss1_80$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(sss1_further_maths$SCORE)
),
"SSS 1 GEO" = c(
length(filter(sss1_1_39, sss1_1_39$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_40_44, sss1_40_44$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_45_49, sss1_45_49$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_50_59, sss1_50_59$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_60_69, sss1_60_69$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_70_79, sss1_70_79$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss1_80, sss1_80$SUBJECT == "GEOGRAPHY")$SCORE),
length(sss1_geography$SCORE)
),
"SSS 2 F/M" = c(
length(filter(sss2_1_39, sss2_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_40_44, sss2_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_45_49, sss2_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_50_59, sss2_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_60_69, sss2_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_70_79, sss2_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss2_80, sss2_80$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(sss2_further_maths$SCORE)
),
"SSS 2 GEO" = c(
length(filter(sss2_1_39, sss2_1_39$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_40_44, sss2_40_44$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_45_49, sss2_45_49$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_50_59, sss2_50_59$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_60_69, sss2_60_69$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_70_79, sss2_70_79$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss2_80, sss2_80$SUBJECT == "GEOGRAPHY")$SCORE),
length(sss2_geography$SCORE)
),
"SSS 3 F/M" = c(
length(filter(sss3_1_39, sss3_1_39$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_40_44, sss3_40_44$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_45_49, sss3_45_49$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_50_59, sss3_50_59$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_60_69, sss3_60_69$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_70_79, sss3_70_79$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(filter(sss3_80, sss3_80$SUBJECT == "FURTHER MATHEMATICS")$SCORE),
length(sss3_further_maths$SCORE)
),
"SSS 3 GEO" = c(
length(filter(sss3_1_39, sss3_1_39$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_40_44, sss3_40_44$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_45_49, sss3_45_49$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_50_59, sss3_50_59$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_60_69, sss3_60_69$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_70_79, sss3_70_79$SUBJECT == "GEOGRAPHY")$SCORE),
length(filter(sss3_80, sss3_80$SUBJECT == "GEOGRAPHY")$SCORE),
length(sss3_geography$SCORE)
)
)
rownames(score_subject_table) <- c(
"1 - 39", "40 - 44", "45 - 49", "50 - 59", "60 - 69", "70 - 79", "80>", "Total"
)
score_subject_table
# Writing Training and Testing Data to File(.csv)
write.csv(
score_subject_table,
file = "score_subject_table.csv",
quote = FALSE, row.names = TRUE)
View(sss1_80)
